/*
 * person
 * The Person REST APIs enable you to access information about the worker person, including country-specific configuration information about name components.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.konfigthis.client.model.CountryPhoneCodeDb1991f2fb091000169c5e0cb7c200b9;
import com.konfigthis.client.model.DeviceTypeDb1991f2fb091000169c5e28fc0400bb;
import com.konfigthis.client.model.ERRORMODELREFERENCE;
import com.konfigthis.client.model.PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class PhoneValidationApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public PhoneValidationApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public PhoneValidationApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call validatePhoneNumberCall(PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 phoneNumberValidationDb1991f2fb091000169c5dfa023800b8, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = phoneNumberValidationDb1991f2fb091000169c5dfa023800b8;

        // create path and map variables
        String localVarPath = "/phoneValidation";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatePhoneNumberValidateBeforeCall(PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 phoneNumberValidationDb1991f2fb091000169c5dfa023800b8, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'phoneNumberValidationDb1991f2fb091000169c5dfa023800b8' is set
        if (phoneNumberValidationDb1991f2fb091000169c5dfa023800b8 == null) {
            throw new ApiException("Missing the required parameter 'phoneNumberValidationDb1991f2fb091000169c5dfa023800b8' when calling validatePhoneNumber(Async)");
        }

        return validatePhoneNumberCall(phoneNumberValidationDb1991f2fb091000169c5dfa023800b8, _callback);

    }


    private ApiResponse<PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8> validatePhoneNumberWithHttpInfo(PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 phoneNumberValidationDb1991f2fb091000169c5dfa023800b8) throws ApiException {
        okhttp3.Call localVarCall = validatePhoneNumberValidateBeforeCall(phoneNumberValidationDb1991f2fb091000169c5dfa023800b8, null);
        Type localVarReturnType = new TypeToken<PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call validatePhoneNumberAsync(PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 phoneNumberValidationDb1991f2fb091000169c5dfa023800b8, final ApiCallback<PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatePhoneNumberValidateBeforeCall(phoneNumberValidationDb1991f2fb091000169c5dfa023800b8, _callback);
        Type localVarReturnType = new TypeToken<PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class ValidatePhoneNumberRequestBuilder {
        private DeviceTypeDb1991f2fb091000169c5e28fc0400bb deviceType;
        private String completePhoneNumber;
        private CountryPhoneCodeDb1991f2fb091000169c5e0cb7c200b9 countryPhoneCode;

        private ValidatePhoneNumberRequestBuilder() {
        }

        /**
         * Set deviceType
         * @param deviceType  (optional)
         * @return ValidatePhoneNumberRequestBuilder
         */
        public ValidatePhoneNumberRequestBuilder deviceType(DeviceTypeDb1991f2fb091000169c5e28fc0400bb deviceType) {
            this.deviceType = deviceType;
            return this;
        }
        
        /**
         * Set completePhoneNumber
         * @param completePhoneNumber The complete phone number. (optional)
         * @return ValidatePhoneNumberRequestBuilder
         */
        public ValidatePhoneNumberRequestBuilder completePhoneNumber(String completePhoneNumber) {
            this.completePhoneNumber = completePhoneNumber;
            return this;
        }
        
        /**
         * Set countryPhoneCode
         * @param countryPhoneCode  (optional)
         * @return ValidatePhoneNumberRequestBuilder
         */
        public ValidatePhoneNumberRequestBuilder countryPhoneCode(CountryPhoneCodeDb1991f2fb091000169c5e0cb7c200b9 countryPhoneCode) {
            this.countryPhoneCode = countryPhoneCode;
            return this;
        }
        
        /**
         * Build call for validatePhoneNumber
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 phoneNumberValidationDb1991f2fb091000169c5dfa023800b8 = buildBodyParams();
            return validatePhoneNumberCall(phoneNumberValidationDb1991f2fb091000169c5dfa023800b8, _callback);
        }

        private PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 buildBodyParams() {
            PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 phoneNumberValidationDb1991f2fb091000169c5dfa023800b8 = new PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8();
            return phoneNumberValidationDb1991f2fb091000169c5dfa023800b8;
        }

        /**
         * Execute validatePhoneNumber request
         * @return PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 execute() throws ApiException {
            PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 phoneNumberValidationDb1991f2fb091000169c5dfa023800b8 = buildBodyParams();
            ApiResponse<PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8> localVarResp = validatePhoneNumberWithHttpInfo(phoneNumberValidationDb1991f2fb091000169c5dfa023800b8);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute validatePhoneNumber request with HTTP info returned
         * @return ApiResponse&lt;PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8> executeWithHttpInfo() throws ApiException {
            PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 phoneNumberValidationDb1991f2fb091000169c5dfa023800b8 = buildBodyParams();
            return validatePhoneNumberWithHttpInfo(phoneNumberValidationDb1991f2fb091000169c5dfa023800b8);
        }

        /**
         * Execute validatePhoneNumber request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8> _callback) throws ApiException {
            PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 phoneNumberValidationDb1991f2fb091000169c5dfa023800b8 = buildBodyParams();
            return validatePhoneNumberAsync(phoneNumberValidationDb1991f2fb091000169c5dfa023800b8, _callback);
        }
    }

    /**
     * Validates phone number data to ensure it is valid for Workday.
     * Validates the specified completePhoneNumber in the request body. The completePhoneNumber field is required in the request body.  If the specified completePhoneNumber is valid, this method returns the 201 response status. If the specified completePhoneNumber is invalid, this method returns the 400 response status with a validation error message.   This method assumes the Allowed Phone Validations for the country of the phone is enabled on the Tenant Setup - Global configuration. If the tenant configuration has disabled the Allowed Phone Validations for the associated country, the validation returns as valid.  Secured by: REST API Public
     * @param phoneNumberValidationDb1991f2fb091000169c5dfa023800b8  (required)
     * @return ValidatePhoneNumberRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public ValidatePhoneNumberRequestBuilder validatePhoneNumber() throws IllegalArgumentException {
        return new ValidatePhoneNumberRequestBuilder();
    }
}
