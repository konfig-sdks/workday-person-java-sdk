/*
 * person
 * The Person REST APIs enable you to access information about the worker person, including country-specific configuration information about name components.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AddressReference9c3ab7b846e4100009e5ec55fa530024;
import com.konfigthis.client.model.EmailReference9c3ab7b846e41000327e788d9664012a;
import com.konfigthis.client.model.InstantMessengerAccount33e26848dc00100036f723337ebb0132;
import com.konfigthis.client.model.PhoneReferenceDf014bc8b5fa10000af0fe7cb0ab00dd;
import com.konfigthis.client.model.WebAddress33e26848dc0010003893a0202ced0165;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf {
  public static final String SERIALIZED_NAME_INSTANT_MESSENGERS = "instantMessengers";
  @SerializedName(SERIALIZED_NAME_INSTANT_MESSENGERS)
  private List<InstantMessengerAccount33e26848dc00100036f723337ebb0132> instantMessengers = null;

  public static final String SERIALIZED_NAME_PHONE_NUMBERS = "phoneNumbers";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBERS)
  private List<PhoneReferenceDf014bc8b5fa10000af0fe7cb0ab00dd> phoneNumbers = null;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<AddressReference9c3ab7b846e4100009e5ec55fa530024> addresses = null;

  public static final String SERIALIZED_NAME_WEB_ADDRESSES = "webAddresses";
  @SerializedName(SERIALIZED_NAME_WEB_ADDRESSES)
  private List<WebAddress33e26848dc0010003893a0202ced0165> webAddresses = null;

  public static final String SERIALIZED_NAME_EMAILS = "emails";
  @SerializedName(SERIALIZED_NAME_EMAILS)
  private List<EmailReference9c3ab7b846e41000327e788d9664012a> emails = null;

  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf() {
  }

  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf instantMessengers(List<InstantMessengerAccount33e26848dc00100036f723337ebb0132> instantMessengers) {
    
    
    
    
    this.instantMessengers = instantMessengers;
    return this;
  }

  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf addInstantMessengersItem(InstantMessengerAccount33e26848dc00100036f723337ebb0132 instantMessengersItem) {
    if (this.instantMessengers == null) {
      this.instantMessengers = new ArrayList<>();
    }
    this.instantMessengers.add(instantMessengersItem);
    return this;
  }

   /**
   * The public instant messenger account references for the person.
   * @return instantMessengers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The public instant messenger account references for the person.")

  public List<InstantMessengerAccount33e26848dc00100036f723337ebb0132> getInstantMessengers() {
    return instantMessengers;
  }


  public void setInstantMessengers(List<InstantMessengerAccount33e26848dc00100036f723337ebb0132> instantMessengers) {
    
    
    
    this.instantMessengers = instantMessengers;
  }


  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf phoneNumbers(List<PhoneReferenceDf014bc8b5fa10000af0fe7cb0ab00dd> phoneNumbers) {
    
    
    
    
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf addPhoneNumbersItem(PhoneReferenceDf014bc8b5fa10000af0fe7cb0ab00dd phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new ArrayList<>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * The public phone number references for the person.
   * @return phoneNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The public phone number references for the person.")

  public List<PhoneReferenceDf014bc8b5fa10000af0fe7cb0ab00dd> getPhoneNumbers() {
    return phoneNumbers;
  }


  public void setPhoneNumbers(List<PhoneReferenceDf014bc8b5fa10000af0fe7cb0ab00dd> phoneNumbers) {
    
    
    
    this.phoneNumbers = phoneNumbers;
  }


  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf addresses(List<AddressReference9c3ab7b846e4100009e5ec55fa530024> addresses) {
    
    
    
    
    this.addresses = addresses;
    return this;
  }

  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf addAddressesItem(AddressReference9c3ab7b846e4100009e5ec55fa530024 addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * The public address references for the person.
   * @return addresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The public address references for the person.")

  public List<AddressReference9c3ab7b846e4100009e5ec55fa530024> getAddresses() {
    return addresses;
  }


  public void setAddresses(List<AddressReference9c3ab7b846e4100009e5ec55fa530024> addresses) {
    
    
    
    this.addresses = addresses;
  }


  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf webAddresses(List<WebAddress33e26848dc0010003893a0202ced0165> webAddresses) {
    
    
    
    
    this.webAddresses = webAddresses;
    return this;
  }

  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf addWebAddressesItem(WebAddress33e26848dc0010003893a0202ced0165 webAddressesItem) {
    if (this.webAddresses == null) {
      this.webAddresses = new ArrayList<>();
    }
    this.webAddresses.add(webAddressesItem);
    return this;
  }

   /**
   * The public web address references for the person.
   * @return webAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The public web address references for the person.")

  public List<WebAddress33e26848dc0010003893a0202ced0165> getWebAddresses() {
    return webAddresses;
  }


  public void setWebAddresses(List<WebAddress33e26848dc0010003893a0202ced0165> webAddresses) {
    
    
    
    this.webAddresses = webAddresses;
  }


  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf emails(List<EmailReference9c3ab7b846e41000327e788d9664012a> emails) {
    
    
    
    
    this.emails = emails;
    return this;
  }

  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf addEmailsItem(EmailReference9c3ab7b846e41000327e788d9664012a emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * The public email references for the person.
   * @return emails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The public email references for the person.")

  public List<EmailReference9c3ab7b846e41000327e788d9664012a> getEmails() {
    return emails;
  }


  public void setEmails(List<EmailReference9c3ab7b846e41000327e788d9664012a> emails) {
    
    
    
    this.emails = emails;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf instance itself
   */
  public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf personPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf = (PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf) o;
    return Objects.equals(this.instantMessengers, personPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.instantMessengers) &&
        Objects.equals(this.phoneNumbers, personPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.phoneNumbers) &&
        Objects.equals(this.addresses, personPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.addresses) &&
        Objects.equals(this.webAddresses, personPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.webAddresses) &&
        Objects.equals(this.emails, personPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.emails)&&
        Objects.equals(this.additionalProperties, personPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instantMessengers, phoneNumbers, addresses, webAddresses, emails, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf {\n");
    sb.append("    instantMessengers: ").append(toIndentedString(instantMessengers)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    webAddresses: ").append(toIndentedString(webAddresses)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instantMessengers");
    openapiFields.add("phoneNumbers");
    openapiFields.add("addresses");
    openapiFields.add("webAddresses");
    openapiFields.add("emails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf is not found in the empty JSON string", PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("instantMessengers") != null && !jsonObj.get("instantMessengers").isJsonNull()) {
        JsonArray jsonArrayinstantMessengers = jsonObj.getAsJsonArray("instantMessengers");
        if (jsonArrayinstantMessengers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("instantMessengers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `instantMessengers` to be an array in the JSON string but got `%s`", jsonObj.get("instantMessengers").toString()));
          }

          // validate the optional field `instantMessengers` (array)
          for (int i = 0; i < jsonArrayinstantMessengers.size(); i++) {
            InstantMessengerAccount33e26848dc00100036f723337ebb0132.validateJsonObject(jsonArrayinstantMessengers.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("phoneNumbers") != null && !jsonObj.get("phoneNumbers").isJsonNull()) {
        JsonArray jsonArrayphoneNumbers = jsonObj.getAsJsonArray("phoneNumbers");
        if (jsonArrayphoneNumbers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("phoneNumbers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `phoneNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("phoneNumbers").toString()));
          }

          // validate the optional field `phoneNumbers` (array)
          for (int i = 0; i < jsonArrayphoneNumbers.size(); i++) {
            PhoneReferenceDf014bc8b5fa10000af0fe7cb0ab00dd.validateJsonObject(jsonArrayphoneNumbers.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull()) {
        JsonArray jsonArrayaddresses = jsonObj.getAsJsonArray("addresses");
        if (jsonArrayaddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
          }

          // validate the optional field `addresses` (array)
          for (int i = 0; i < jsonArrayaddresses.size(); i++) {
            AddressReference9c3ab7b846e4100009e5ec55fa530024.validateJsonObject(jsonArrayaddresses.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("webAddresses") != null && !jsonObj.get("webAddresses").isJsonNull()) {
        JsonArray jsonArraywebAddresses = jsonObj.getAsJsonArray("webAddresses");
        if (jsonArraywebAddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("webAddresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `webAddresses` to be an array in the JSON string but got `%s`", jsonObj.get("webAddresses").toString()));
          }

          // validate the optional field `webAddresses` (array)
          for (int i = 0; i < jsonArraywebAddresses.size(); i++) {
            WebAddress33e26848dc0010003893a0202ced0165.validateJsonObject(jsonArraywebAddresses.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("emails") != null && !jsonObj.get("emails").isJsonNull()) {
        JsonArray jsonArrayemails = jsonObj.getAsJsonArray("emails");
        if (jsonArrayemails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("emails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `emails` to be an array in the JSON string but got `%s`", jsonObj.get("emails").toString()));
          }

          // validate the optional field `emails` (array)
          for (int i = 0; i < jsonArrayemails.size(); i++) {
            EmailReference9c3ab7b846e41000327e788d9664012a.validateJsonObject(jsonArrayemails.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf>() {
           @Override
           public void write(JsonWriter out, PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf
  * @throws IOException if the JSON string is invalid with respect to PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf
  */
  public static PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf.class);
  }

 /**
  * Convert an instance of PersonPublicRepresentationD8f2aecf3d63100016a77ab413a20235AllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

