/*
 * person
 * The Person REST APIs enable you to access information about the worker person, including country-specific configuration information about name components.
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CountryA58f621b14ee1000146a3350196300e7;
import com.konfigthis.client.model.CountryCityA58f621b14ee1000146a333da1c900e6;
import com.konfigthis.client.model.CountryRegionA58f621b14ee100014b01c1cbabe00f4;
import com.konfigthis.client.model.UsageA58f621b14ee100014b01c034eeb00f3;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf {
  public static final String SERIALIZED_NAME_ADDRESS_LINE4_LOCAL = "addressLine4Local";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE4_LOCAL)
  private String addressLine4Local;

  public static final String SERIALIZED_NAME_CITY_SUBDIVISION2_LOCAL = "citySubdivision2Local";
  @SerializedName(SERIALIZED_NAME_CITY_SUBDIVISION2_LOCAL)
  private String citySubdivision2Local;

  public static final String SERIALIZED_NAME_ADDRESS_LINE8_LOCAL = "addressLine8Local";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE8_LOCAL)
  private String addressLine8Local;

  public static final String SERIALIZED_NAME_CITY_SUBDIVISION1_LOCAL = "citySubdivision1Local";
  @SerializedName(SERIALIZED_NAME_CITY_SUBDIVISION1_LOCAL)
  private String citySubdivision1Local;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE9 = "addressLine9";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE9)
  private String addressLine9;

  public static final String SERIALIZED_NAME_REGION_SUBDIVISION1_LOCAL = "regionSubdivision1Local";
  @SerializedName(SERIALIZED_NAME_REGION_SUBDIVISION1_LOCAL)
  private String regionSubdivision1Local;

  public static final String SERIALIZED_NAME_ADDRESS_LINE8 = "addressLine8";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE8)
  private String addressLine8;

  public static final String SERIALIZED_NAME_FULL_FORMATTED_ADDRESS = "fullFormattedAddress";
  @SerializedName(SERIALIZED_NAME_FULL_FORMATTED_ADDRESS)
  private String fullFormattedAddress;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_ADDRESS_LINE6_LOCAL = "addressLine6Local";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE6_LOCAL)
  private String addressLine6Local;

  public static final String SERIALIZED_NAME_REGION_SUBDIVISION2 = "regionSubdivision2";
  @SerializedName(SERIALIZED_NAME_REGION_SUBDIVISION2)
  private String regionSubdivision2;

  public static final String SERIALIZED_NAME_COUNTRY_CITY = "countryCity";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CITY)
  private CountryCityA58f621b14ee1000146a333da1c900e6 countryCity;

  public static final String SERIALIZED_NAME_ADDRESS_LINE4 = "addressLine4";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE4)
  private String addressLine4;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_FULL_FORMATTED_LOCAL_ADDRESS = "fullFormattedLocalAddress";
  @SerializedName(SERIALIZED_NAME_FULL_FORMATTED_LOCAL_ADDRESS)
  private String fullFormattedLocalAddress;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1_LOCAL = "addressLine1Local";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1_LOCAL)
  private String addressLine1Local;

  public static final String SERIALIZED_NAME_CITY_SUBDIVISION1 = "citySubdivision1";
  @SerializedName(SERIALIZED_NAME_CITY_SUBDIVISION1)
  private String citySubdivision1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE6 = "addressLine6";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE6)
  private String addressLine6;

  public static final String SERIALIZED_NAME_USAGE = "usage";
  @SerializedName(SERIALIZED_NAME_USAGE)
  private UsageA58f621b14ee100014b01c034eeb00f3 usage;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_ADDRESS_LINE3 = "addressLine3";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE3)
  private String addressLine3;

  public static final String SERIALIZED_NAME_CITY_SUBDIVISION2 = "citySubdivision2";
  @SerializedName(SERIALIZED_NAME_CITY_SUBDIVISION2)
  private String citySubdivision2;

  public static final String SERIALIZED_NAME_ADDRESS_LINE9_LOCAL = "addressLine9Local";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE9_LOCAL)
  private String addressLine9Local;

  public static final String SERIALIZED_NAME_EFFECTIVE = "effective";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE)
  private LocalDate effective;

  public static final String SERIALIZED_NAME_ADDRESS_LINE7_LOCAL = "addressLine7Local";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE7_LOCAL)
  private String addressLine7Local;

  public static final String SERIALIZED_NAME_ADDRESS_LINE5 = "addressLine5";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE5)
  private String addressLine5;

  public static final String SERIALIZED_NAME_REGION_SUBDIVISION1 = "regionSubdivision1";
  @SerializedName(SERIALIZED_NAME_REGION_SUBDIVISION1)
  private String regionSubdivision1;

  public static final String SERIALIZED_NAME_CITY_LOCAL = "cityLocal";
  @SerializedName(SERIALIZED_NAME_CITY_LOCAL)
  private String cityLocal;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2_LOCAL = "addressLine2Local";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2_LOCAL)
  private String addressLine2Local;

  public static final String SERIALIZED_NAME_COUNTRY_REGION = "countryRegion";
  @SerializedName(SERIALIZED_NAME_COUNTRY_REGION)
  private CountryRegionA58f621b14ee100014b01c1cbabe00f4 countryRegion;

  public static final String SERIALIZED_NAME_ADDRESS_LINE3_LOCAL = "addressLine3Local";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE3_LOCAL)
  private String addressLine3Local;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private CountryA58f621b14ee1000146a3350196300e7 country;

  public static final String SERIALIZED_NAME_ADDRESS_LINE5_LOCAL = "addressLine5Local";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE5_LOCAL)
  private String addressLine5Local;

  public static final String SERIALIZED_NAME_ADDRESS_LINE7 = "addressLine7";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE7)
  private String addressLine7;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf() {
  }

  
  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf(
     LocalDate effective
  ) {
    this();
    this.effective = effective;
  }

  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine4Local(String addressLine4Local) {
    
    
    
    
    this.addressLine4Local = addressLine4Local;
    return this;
  }

   /**
   * Local Address Line 4 for the address.
   * @return addressLine4Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Local Address Line 4 for the address.")

  public String getAddressLine4Local() {
    return addressLine4Local;
  }


  public void setAddressLine4Local(String addressLine4Local) {
    
    
    
    this.addressLine4Local = addressLine4Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf citySubdivision2Local(String citySubdivision2Local) {
    
    
    
    
    this.citySubdivision2Local = citySubdivision2Local;
    return this;
  }

   /**
   * City Subdivision 2 - Local for the address.
   * @return citySubdivision2Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "City Subdivision 2 - Local for the address.")

  public String getCitySubdivision2Local() {
    return citySubdivision2Local;
  }


  public void setCitySubdivision2Local(String citySubdivision2Local) {
    
    
    
    this.citySubdivision2Local = citySubdivision2Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine8Local(String addressLine8Local) {
    
    
    
    
    this.addressLine8Local = addressLine8Local;
    return this;
  }

   /**
   * Local Address Line 8 for the address.
   * @return addressLine8Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Local Address Line 8 for the address.")

  public String getAddressLine8Local() {
    return addressLine8Local;
  }


  public void setAddressLine8Local(String addressLine8Local) {
    
    
    
    this.addressLine8Local = addressLine8Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf citySubdivision1Local(String citySubdivision1Local) {
    
    
    
    
    this.citySubdivision1Local = citySubdivision1Local;
    return this;
  }

   /**
   * City Subdivision 1 - Local for the address.
   * @return citySubdivision1Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "City Subdivision 1 - Local for the address.")

  public String getCitySubdivision1Local() {
    return citySubdivision1Local;
  }


  public void setCitySubdivision1Local(String citySubdivision1Local) {
    
    
    
    this.citySubdivision1Local = citySubdivision1Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine1(String addressLine1) {
    
    
    
    
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Address Line 1 for the address.
   * @return addressLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Address Line 1 for the address.")

  public String getAddressLine1() {
    return addressLine1;
  }


  public void setAddressLine1(String addressLine1) {
    
    
    
    this.addressLine1 = addressLine1;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine9(String addressLine9) {
    
    
    
    
    this.addressLine9 = addressLine9;
    return this;
  }

   /**
   * Address Line 9 for the address.
   * @return addressLine9
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Address Line 9 for the address.")

  public String getAddressLine9() {
    return addressLine9;
  }


  public void setAddressLine9(String addressLine9) {
    
    
    
    this.addressLine9 = addressLine9;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf regionSubdivision1Local(String regionSubdivision1Local) {
    
    
    
    
    this.regionSubdivision1Local = regionSubdivision1Local;
    return this;
  }

   /**
   * Region Subdivision 1 - Local for the address.
   * @return regionSubdivision1Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Region Subdivision 1 - Local for the address.")

  public String getRegionSubdivision1Local() {
    return regionSubdivision1Local;
  }


  public void setRegionSubdivision1Local(String regionSubdivision1Local) {
    
    
    
    this.regionSubdivision1Local = regionSubdivision1Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine8(String addressLine8) {
    
    
    
    
    this.addressLine8 = addressLine8;
    return this;
  }

   /**
   * Address Line 8 for the address.
   * @return addressLine8
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Address Line 8 for the address.")

  public String getAddressLine8() {
    return addressLine8;
  }


  public void setAddressLine8(String addressLine8) {
    
    
    
    this.addressLine8 = addressLine8;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf fullFormattedAddress(String fullFormattedAddress) {
    
    
    
    
    this.fullFormattedAddress = fullFormattedAddress;
    return this;
  }

   /**
   * Full Formatted Address
   * @return fullFormattedAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Full Formatted Address")

  public String getFullFormattedAddress() {
    return fullFormattedAddress;
  }


  public void setFullFormattedAddress(String fullFormattedAddress) {
    
    
    
    this.fullFormattedAddress = fullFormattedAddress;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine2(String addressLine2) {
    
    
    
    
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Address Line 2 for the address.
   * @return addressLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Address Line 2 for the address.")

  public String getAddressLine2() {
    return addressLine2;
  }


  public void setAddressLine2(String addressLine2) {
    
    
    
    this.addressLine2 = addressLine2;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine6Local(String addressLine6Local) {
    
    
    
    
    this.addressLine6Local = addressLine6Local;
    return this;
  }

   /**
   * Local Address Line 6 for the address.
   * @return addressLine6Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Local Address Line 6 for the address.")

  public String getAddressLine6Local() {
    return addressLine6Local;
  }


  public void setAddressLine6Local(String addressLine6Local) {
    
    
    
    this.addressLine6Local = addressLine6Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf regionSubdivision2(String regionSubdivision2) {
    
    
    
    
    this.regionSubdivision2 = regionSubdivision2;
    return this;
  }

   /**
   * Region Subdivision 2 for the address.
   * @return regionSubdivision2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Region Subdivision 2 for the address.")

  public String getRegionSubdivision2() {
    return regionSubdivision2;
  }


  public void setRegionSubdivision2(String regionSubdivision2) {
    
    
    
    this.regionSubdivision2 = regionSubdivision2;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf countryCity(CountryCityA58f621b14ee1000146a333da1c900e6 countryCity) {
    
    
    
    
    this.countryCity = countryCity;
    return this;
  }

   /**
   * Get countryCity
   * @return countryCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CountryCityA58f621b14ee1000146a333da1c900e6 getCountryCity() {
    return countryCity;
  }


  public void setCountryCity(CountryCityA58f621b14ee1000146a333da1c900e6 countryCity) {
    
    
    
    this.countryCity = countryCity;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine4(String addressLine4) {
    
    
    
    
    this.addressLine4 = addressLine4;
    return this;
  }

   /**
   * Address Line 4 for the address.
   * @return addressLine4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Address Line 4 for the address.")

  public String getAddressLine4() {
    return addressLine4;
  }


  public void setAddressLine4(String addressLine4) {
    
    
    
    this.addressLine4 = addressLine4;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf postalCode(String postalCode) {
    
    
    
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * The postal code for the address.
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "The postal code for the address.")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    
    
    
    this.postalCode = postalCode;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf fullFormattedLocalAddress(String fullFormattedLocalAddress) {
    
    
    
    
    this.fullFormattedLocalAddress = fullFormattedLocalAddress;
    return this;
  }

   /**
   * Full Formatted Local Address
   * @return fullFormattedLocalAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Full Formatted Local Address")

  public String getFullFormattedLocalAddress() {
    return fullFormattedLocalAddress;
  }


  public void setFullFormattedLocalAddress(String fullFormattedLocalAddress) {
    
    
    
    this.fullFormattedLocalAddress = fullFormattedLocalAddress;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine1Local(String addressLine1Local) {
    
    
    
    
    this.addressLine1Local = addressLine1Local;
    return this;
  }

   /**
   * Local Address Line 1 for the address.
   * @return addressLine1Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Local Address Line 1 for the address.")

  public String getAddressLine1Local() {
    return addressLine1Local;
  }


  public void setAddressLine1Local(String addressLine1Local) {
    
    
    
    this.addressLine1Local = addressLine1Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf citySubdivision1(String citySubdivision1) {
    
    
    
    
    this.citySubdivision1 = citySubdivision1;
    return this;
  }

   /**
   * City Subdivision 1 for the address.
   * @return citySubdivision1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "City Subdivision 1 for the address.")

  public String getCitySubdivision1() {
    return citySubdivision1;
  }


  public void setCitySubdivision1(String citySubdivision1) {
    
    
    
    this.citySubdivision1 = citySubdivision1;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine6(String addressLine6) {
    
    
    
    
    this.addressLine6 = addressLine6;
    return this;
  }

   /**
   * Address Line 6 for the address.
   * @return addressLine6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Address Line 6 for the address.")

  public String getAddressLine6() {
    return addressLine6;
  }


  public void setAddressLine6(String addressLine6) {
    
    
    
    this.addressLine6 = addressLine6;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf usage(UsageA58f621b14ee100014b01c034eeb00f3 usage) {
    
    
    
    
    this.usage = usage;
    return this;
  }

   /**
   * Get usage
   * @return usage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UsageA58f621b14ee100014b01c034eeb00f3 getUsage() {
    return usage;
  }


  public void setUsage(UsageA58f621b14ee100014b01c034eeb00f3 usage) {
    
    
    
    this.usage = usage;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * City for the address.
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "City for the address.")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine3(String addressLine3) {
    
    
    
    
    this.addressLine3 = addressLine3;
    return this;
  }

   /**
   * Address Line 3 for the address.
   * @return addressLine3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Address Line 3 for the address.")

  public String getAddressLine3() {
    return addressLine3;
  }


  public void setAddressLine3(String addressLine3) {
    
    
    
    this.addressLine3 = addressLine3;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf citySubdivision2(String citySubdivision2) {
    
    
    
    
    this.citySubdivision2 = citySubdivision2;
    return this;
  }

   /**
   * City Subdivision 2 for the address.
   * @return citySubdivision2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "City Subdivision 2 for the address.")

  public String getCitySubdivision2() {
    return citySubdivision2;
  }


  public void setCitySubdivision2(String citySubdivision2) {
    
    
    
    this.citySubdivision2 = citySubdivision2;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine9Local(String addressLine9Local) {
    
    
    
    
    this.addressLine9Local = addressLine9Local;
    return this;
  }

   /**
   * Local Address Line 9 for the address.
   * @return addressLine9Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Local Address Line 9 for the address.")

  public String getAddressLine9Local() {
    return addressLine9Local;
  }


  public void setAddressLine9Local(String addressLine9Local) {
    
    
    
    this.addressLine9Local = addressLine9Local;
  }


   /**
   * The Effective Date for the address.
   * @return effective
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Effective Date for the address.")

  public LocalDate getEffective() {
    return effective;
  }




  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine7Local(String addressLine7Local) {
    
    
    
    
    this.addressLine7Local = addressLine7Local;
    return this;
  }

   /**
   * Local Address Line 7 for the address.
   * @return addressLine7Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Local Address Line 7 for the address.")

  public String getAddressLine7Local() {
    return addressLine7Local;
  }


  public void setAddressLine7Local(String addressLine7Local) {
    
    
    
    this.addressLine7Local = addressLine7Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine5(String addressLine5) {
    
    
    
    
    this.addressLine5 = addressLine5;
    return this;
  }

   /**
   * Address Line 5 for the address.
   * @return addressLine5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Address Line 5 for the address.")

  public String getAddressLine5() {
    return addressLine5;
  }


  public void setAddressLine5(String addressLine5) {
    
    
    
    this.addressLine5 = addressLine5;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf regionSubdivision1(String regionSubdivision1) {
    
    
    
    
    this.regionSubdivision1 = regionSubdivision1;
    return this;
  }

   /**
   * Region Subdivision 1 for the address.
   * @return regionSubdivision1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Region Subdivision 1 for the address.")

  public String getRegionSubdivision1() {
    return regionSubdivision1;
  }


  public void setRegionSubdivision1(String regionSubdivision1) {
    
    
    
    this.regionSubdivision1 = regionSubdivision1;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf cityLocal(String cityLocal) {
    
    
    
    
    this.cityLocal = cityLocal;
    return this;
  }

   /**
   * City - Local for the address.
   * @return cityLocal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "City - Local for the address.")

  public String getCityLocal() {
    return cityLocal;
  }


  public void setCityLocal(String cityLocal) {
    
    
    
    this.cityLocal = cityLocal;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine2Local(String addressLine2Local) {
    
    
    
    
    this.addressLine2Local = addressLine2Local;
    return this;
  }

   /**
   * Local Address Line 2 for the address.
   * @return addressLine2Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Local Address Line 2 for the address.")

  public String getAddressLine2Local() {
    return addressLine2Local;
  }


  public void setAddressLine2Local(String addressLine2Local) {
    
    
    
    this.addressLine2Local = addressLine2Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf countryRegion(CountryRegionA58f621b14ee100014b01c1cbabe00f4 countryRegion) {
    
    
    
    
    this.countryRegion = countryRegion;
    return this;
  }

   /**
   * Get countryRegion
   * @return countryRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CountryRegionA58f621b14ee100014b01c1cbabe00f4 getCountryRegion() {
    return countryRegion;
  }


  public void setCountryRegion(CountryRegionA58f621b14ee100014b01c1cbabe00f4 countryRegion) {
    
    
    
    this.countryRegion = countryRegion;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine3Local(String addressLine3Local) {
    
    
    
    
    this.addressLine3Local = addressLine3Local;
    return this;
  }

   /**
   * Local Address Line 3 for the address.
   * @return addressLine3Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Local Address Line 3 for the address.")

  public String getAddressLine3Local() {
    return addressLine3Local;
  }


  public void setAddressLine3Local(String addressLine3Local) {
    
    
    
    this.addressLine3Local = addressLine3Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf country(CountryA58f621b14ee1000146a3350196300e7 country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CountryA58f621b14ee1000146a3350196300e7 getCountry() {
    return country;
  }


  public void setCountry(CountryA58f621b14ee1000146a3350196300e7 country) {
    
    
    
    this.country = country;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine5Local(String addressLine5Local) {
    
    
    
    
    this.addressLine5Local = addressLine5Local;
    return this;
  }

   /**
   * Local Address Line 5 for the address.
   * @return addressLine5Local
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Local Address Line 5 for the address.")

  public String getAddressLine5Local() {
    return addressLine5Local;
  }


  public void setAddressLine5Local(String addressLine5Local) {
    
    
    
    this.addressLine5Local = addressLine5Local;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressLine7(String addressLine7) {
    
    
    
    
    this.addressLine7 = addressLine7;
    return this;
  }

   /**
   * Address Line 7 for the address.
   * @return addressLine7
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.", value = "Address Line 7 for the address.")

  public String getAddressLine7() {
    return addressLine7;
  }


  public void setAddressLine7(String addressLine7) {
    
    
    
    this.addressLine7 = addressLine7;
  }


  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Id of the instance
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id of the instance")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf instance itself
   */
  public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf addressReference9c3ab7b846e4100009e5ec55fa530024AllOf = (AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf) o;
    return Objects.equals(this.addressLine4Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine4Local) &&
        Objects.equals(this.citySubdivision2Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.citySubdivision2Local) &&
        Objects.equals(this.addressLine8Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine8Local) &&
        Objects.equals(this.citySubdivision1Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.citySubdivision1Local) &&
        Objects.equals(this.addressLine1, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine1) &&
        Objects.equals(this.addressLine9, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine9) &&
        Objects.equals(this.regionSubdivision1Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.regionSubdivision1Local) &&
        Objects.equals(this.addressLine8, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine8) &&
        Objects.equals(this.fullFormattedAddress, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.fullFormattedAddress) &&
        Objects.equals(this.addressLine2, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine2) &&
        Objects.equals(this.addressLine6Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine6Local) &&
        Objects.equals(this.regionSubdivision2, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.regionSubdivision2) &&
        Objects.equals(this.countryCity, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.countryCity) &&
        Objects.equals(this.addressLine4, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine4) &&
        Objects.equals(this.postalCode, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.postalCode) &&
        Objects.equals(this.fullFormattedLocalAddress, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.fullFormattedLocalAddress) &&
        Objects.equals(this.addressLine1Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine1Local) &&
        Objects.equals(this.citySubdivision1, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.citySubdivision1) &&
        Objects.equals(this.addressLine6, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine6) &&
        Objects.equals(this.usage, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.usage) &&
        Objects.equals(this.city, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.city) &&
        Objects.equals(this.addressLine3, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine3) &&
        Objects.equals(this.citySubdivision2, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.citySubdivision2) &&
        Objects.equals(this.addressLine9Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine9Local) &&
        Objects.equals(this.effective, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.effective) &&
        Objects.equals(this.addressLine7Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine7Local) &&
        Objects.equals(this.addressLine5, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine5) &&
        Objects.equals(this.regionSubdivision1, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.regionSubdivision1) &&
        Objects.equals(this.cityLocal, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.cityLocal) &&
        Objects.equals(this.addressLine2Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine2Local) &&
        Objects.equals(this.countryRegion, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.countryRegion) &&
        Objects.equals(this.addressLine3Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine3Local) &&
        Objects.equals(this.country, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.country) &&
        Objects.equals(this.addressLine5Local, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine5Local) &&
        Objects.equals(this.addressLine7, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.addressLine7) &&
        Objects.equals(this.id, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.id)&&
        Objects.equals(this.additionalProperties, addressReference9c3ab7b846e4100009e5ec55fa530024AllOf.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine4Local, citySubdivision2Local, addressLine8Local, citySubdivision1Local, addressLine1, addressLine9, regionSubdivision1Local, addressLine8, fullFormattedAddress, addressLine2, addressLine6Local, regionSubdivision2, countryCity, addressLine4, postalCode, fullFormattedLocalAddress, addressLine1Local, citySubdivision1, addressLine6, usage, city, addressLine3, citySubdivision2, addressLine9Local, effective, addressLine7Local, addressLine5, regionSubdivision1, cityLocal, addressLine2Local, countryRegion, addressLine3Local, country, addressLine5Local, addressLine7, id, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf {\n");
    sb.append("    addressLine4Local: ").append(toIndentedString(addressLine4Local)).append("\n");
    sb.append("    citySubdivision2Local: ").append(toIndentedString(citySubdivision2Local)).append("\n");
    sb.append("    addressLine8Local: ").append(toIndentedString(addressLine8Local)).append("\n");
    sb.append("    citySubdivision1Local: ").append(toIndentedString(citySubdivision1Local)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine9: ").append(toIndentedString(addressLine9)).append("\n");
    sb.append("    regionSubdivision1Local: ").append(toIndentedString(regionSubdivision1Local)).append("\n");
    sb.append("    addressLine8: ").append(toIndentedString(addressLine8)).append("\n");
    sb.append("    fullFormattedAddress: ").append(toIndentedString(fullFormattedAddress)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    addressLine6Local: ").append(toIndentedString(addressLine6Local)).append("\n");
    sb.append("    regionSubdivision2: ").append(toIndentedString(regionSubdivision2)).append("\n");
    sb.append("    countryCity: ").append(toIndentedString(countryCity)).append("\n");
    sb.append("    addressLine4: ").append(toIndentedString(addressLine4)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    fullFormattedLocalAddress: ").append(toIndentedString(fullFormattedLocalAddress)).append("\n");
    sb.append("    addressLine1Local: ").append(toIndentedString(addressLine1Local)).append("\n");
    sb.append("    citySubdivision1: ").append(toIndentedString(citySubdivision1)).append("\n");
    sb.append("    addressLine6: ").append(toIndentedString(addressLine6)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    addressLine3: ").append(toIndentedString(addressLine3)).append("\n");
    sb.append("    citySubdivision2: ").append(toIndentedString(citySubdivision2)).append("\n");
    sb.append("    addressLine9Local: ").append(toIndentedString(addressLine9Local)).append("\n");
    sb.append("    effective: ").append(toIndentedString(effective)).append("\n");
    sb.append("    addressLine7Local: ").append(toIndentedString(addressLine7Local)).append("\n");
    sb.append("    addressLine5: ").append(toIndentedString(addressLine5)).append("\n");
    sb.append("    regionSubdivision1: ").append(toIndentedString(regionSubdivision1)).append("\n");
    sb.append("    cityLocal: ").append(toIndentedString(cityLocal)).append("\n");
    sb.append("    addressLine2Local: ").append(toIndentedString(addressLine2Local)).append("\n");
    sb.append("    countryRegion: ").append(toIndentedString(countryRegion)).append("\n");
    sb.append("    addressLine3Local: ").append(toIndentedString(addressLine3Local)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    addressLine5Local: ").append(toIndentedString(addressLine5Local)).append("\n");
    sb.append("    addressLine7: ").append(toIndentedString(addressLine7)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addressLine4Local");
    openapiFields.add("citySubdivision2Local");
    openapiFields.add("addressLine8Local");
    openapiFields.add("citySubdivision1Local");
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine9");
    openapiFields.add("regionSubdivision1Local");
    openapiFields.add("addressLine8");
    openapiFields.add("fullFormattedAddress");
    openapiFields.add("addressLine2");
    openapiFields.add("addressLine6Local");
    openapiFields.add("regionSubdivision2");
    openapiFields.add("countryCity");
    openapiFields.add("addressLine4");
    openapiFields.add("postalCode");
    openapiFields.add("fullFormattedLocalAddress");
    openapiFields.add("addressLine1Local");
    openapiFields.add("citySubdivision1");
    openapiFields.add("addressLine6");
    openapiFields.add("usage");
    openapiFields.add("city");
    openapiFields.add("addressLine3");
    openapiFields.add("citySubdivision2");
    openapiFields.add("addressLine9Local");
    openapiFields.add("effective");
    openapiFields.add("addressLine7Local");
    openapiFields.add("addressLine5");
    openapiFields.add("regionSubdivision1");
    openapiFields.add("cityLocal");
    openapiFields.add("addressLine2Local");
    openapiFields.add("countryRegion");
    openapiFields.add("addressLine3Local");
    openapiFields.add("country");
    openapiFields.add("addressLine5Local");
    openapiFields.add("addressLine7");
    openapiFields.add("id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf is not found in the empty JSON string", AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("addressLine4Local") != null && !jsonObj.get("addressLine4Local").isJsonNull()) && !jsonObj.get("addressLine4Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine4Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine4Local").toString()));
      }
      if ((jsonObj.get("citySubdivision2Local") != null && !jsonObj.get("citySubdivision2Local").isJsonNull()) && !jsonObj.get("citySubdivision2Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `citySubdivision2Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("citySubdivision2Local").toString()));
      }
      if ((jsonObj.get("addressLine8Local") != null && !jsonObj.get("addressLine8Local").isJsonNull()) && !jsonObj.get("addressLine8Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine8Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine8Local").toString()));
      }
      if ((jsonObj.get("citySubdivision1Local") != null && !jsonObj.get("citySubdivision1Local").isJsonNull()) && !jsonObj.get("citySubdivision1Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `citySubdivision1Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("citySubdivision1Local").toString()));
      }
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine9") != null && !jsonObj.get("addressLine9").isJsonNull()) && !jsonObj.get("addressLine9").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine9` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine9").toString()));
      }
      if ((jsonObj.get("regionSubdivision1Local") != null && !jsonObj.get("regionSubdivision1Local").isJsonNull()) && !jsonObj.get("regionSubdivision1Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regionSubdivision1Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regionSubdivision1Local").toString()));
      }
      if ((jsonObj.get("addressLine8") != null && !jsonObj.get("addressLine8").isJsonNull()) && !jsonObj.get("addressLine8").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine8` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine8").toString()));
      }
      if ((jsonObj.get("fullFormattedAddress") != null && !jsonObj.get("fullFormattedAddress").isJsonNull()) && !jsonObj.get("fullFormattedAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullFormattedAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullFormattedAddress").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("addressLine6Local") != null && !jsonObj.get("addressLine6Local").isJsonNull()) && !jsonObj.get("addressLine6Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine6Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine6Local").toString()));
      }
      if ((jsonObj.get("regionSubdivision2") != null && !jsonObj.get("regionSubdivision2").isJsonNull()) && !jsonObj.get("regionSubdivision2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regionSubdivision2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regionSubdivision2").toString()));
      }
      // validate the optional field `countryCity`
      if (jsonObj.get("countryCity") != null && !jsonObj.get("countryCity").isJsonNull()) {
        CountryCityA58f621b14ee1000146a333da1c900e6.validateJsonObject(jsonObj.getAsJsonObject("countryCity"));
      }
      if ((jsonObj.get("addressLine4") != null && !jsonObj.get("addressLine4").isJsonNull()) && !jsonObj.get("addressLine4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine4").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("fullFormattedLocalAddress") != null && !jsonObj.get("fullFormattedLocalAddress").isJsonNull()) && !jsonObj.get("fullFormattedLocalAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullFormattedLocalAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullFormattedLocalAddress").toString()));
      }
      if ((jsonObj.get("addressLine1Local") != null && !jsonObj.get("addressLine1Local").isJsonNull()) && !jsonObj.get("addressLine1Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1Local").toString()));
      }
      if ((jsonObj.get("citySubdivision1") != null && !jsonObj.get("citySubdivision1").isJsonNull()) && !jsonObj.get("citySubdivision1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `citySubdivision1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("citySubdivision1").toString()));
      }
      if ((jsonObj.get("addressLine6") != null && !jsonObj.get("addressLine6").isJsonNull()) && !jsonObj.get("addressLine6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine6").toString()));
      }
      // validate the optional field `usage`
      if (jsonObj.get("usage") != null && !jsonObj.get("usage").isJsonNull()) {
        UsageA58f621b14ee100014b01c034eeb00f3.validateJsonObject(jsonObj.getAsJsonObject("usage"));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("addressLine3") != null && !jsonObj.get("addressLine3").isJsonNull()) && !jsonObj.get("addressLine3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine3").toString()));
      }
      if ((jsonObj.get("citySubdivision2") != null && !jsonObj.get("citySubdivision2").isJsonNull()) && !jsonObj.get("citySubdivision2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `citySubdivision2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("citySubdivision2").toString()));
      }
      if ((jsonObj.get("addressLine9Local") != null && !jsonObj.get("addressLine9Local").isJsonNull()) && !jsonObj.get("addressLine9Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine9Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine9Local").toString()));
      }
      if ((jsonObj.get("addressLine7Local") != null && !jsonObj.get("addressLine7Local").isJsonNull()) && !jsonObj.get("addressLine7Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine7Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine7Local").toString()));
      }
      if ((jsonObj.get("addressLine5") != null && !jsonObj.get("addressLine5").isJsonNull()) && !jsonObj.get("addressLine5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine5").toString()));
      }
      if ((jsonObj.get("regionSubdivision1") != null && !jsonObj.get("regionSubdivision1").isJsonNull()) && !jsonObj.get("regionSubdivision1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regionSubdivision1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regionSubdivision1").toString()));
      }
      if ((jsonObj.get("cityLocal") != null && !jsonObj.get("cityLocal").isJsonNull()) && !jsonObj.get("cityLocal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cityLocal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cityLocal").toString()));
      }
      if ((jsonObj.get("addressLine2Local") != null && !jsonObj.get("addressLine2Local").isJsonNull()) && !jsonObj.get("addressLine2Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2Local").toString()));
      }
      // validate the optional field `countryRegion`
      if (jsonObj.get("countryRegion") != null && !jsonObj.get("countryRegion").isJsonNull()) {
        CountryRegionA58f621b14ee100014b01c1cbabe00f4.validateJsonObject(jsonObj.getAsJsonObject("countryRegion"));
      }
      if ((jsonObj.get("addressLine3Local") != null && !jsonObj.get("addressLine3Local").isJsonNull()) && !jsonObj.get("addressLine3Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine3Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine3Local").toString()));
      }
      // validate the optional field `country`
      if (jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) {
        CountryA58f621b14ee1000146a3350196300e7.validateJsonObject(jsonObj.getAsJsonObject("country"));
      }
      if ((jsonObj.get("addressLine5Local") != null && !jsonObj.get("addressLine5Local").isJsonNull()) && !jsonObj.get("addressLine5Local").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine5Local` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine5Local").toString()));
      }
      if ((jsonObj.get("addressLine7") != null && !jsonObj.get("addressLine7").isJsonNull()) && !jsonObj.get("addressLine7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine7").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf>() {
           @Override
           public void write(JsonWriter out, AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf
  * @throws IOException if the JSON string is invalid with respect to AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf
  */
  public static AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf.class);
  }

 /**
  * Convert an instance of AddressReference9c3ab7b846e4100009e5ec55fa530024AllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

